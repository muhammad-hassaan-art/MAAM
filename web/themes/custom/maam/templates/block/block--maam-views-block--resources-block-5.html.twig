{#
/**
 * @file
 * Default theme implementation to display a block.
 *
 * Available variables:
 * - plugin_id: The ID of the block implementation.
 * - label: The configured label of the block if visible.
 * - configuration: A list of the block's configuration values.
 *   - label: The configured label for the block.
 *   - label_display: The display settings for the label.
 *   - provider: The module or other provider that provided this block plugin.
 *   - Block plugin specific settings will also be stored here.
 * - content: The content of this block.
 * - attributes: array of HTML attributes populated by modules, intended to
 *   be added to the main container tag of this template.
 *   - id: A valid HTML ID and guaranteed unique.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main content
 *   tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 *
 * @see template_preprocess_block()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'block',
    'block-' ~ configuration.provider|clean_class,
    'block-' ~ plugin_id|clean_class,
  ]
%}
<div{{ attributes.addClass(classes) }}>
  {{ title_prefix }}
  {% if label %}
    <h2{{ title_attributes }}>{{ label }}</h2>
  {% endif %}
  {{ title_suffix }}
  {% block content %}
    <div{{ content_attributes.addClass('content') }}>
      {{ content }}
    </div>
  {% endblock %}
</div>
<script>
  


    // Wait for the document to be ready
document.addEventListener('DOMContentLoaded', function () {
  // Get the parent element of all view-groupings
  var parentElement = document.querySelector('.view-content.row');
 
  // Create a new div for type
  var typeDiv = document.createElement('div');
  typeDiv.id = 'type';
 
  // Create a new div for content
  var contentDiv = document.createElement('div');
  contentDiv.id = 'content';
 
  // Loop through each view-grouping
  var viewGroupings = document.querySelectorAll('.view-grouping');
  viewGroupings.forEach(function(viewGrouping) {
    // Move header content to typeDiv
    typeDiv.innerHTML += '<div>' + viewGrouping.querySelector('.view-grouping-header').innerHTML + '</div>';
    // Move h3 content to typeDiv
    typeDiv.innerHTML += '<div>' + viewGrouping.querySelector('.view-grouping-content h3').innerHTML + '</div>';
 
    // Move resources-listing-content to contentDiv
    contentDiv.innerHTML += '<div>' + viewGrouping.querySelector('.resources-listing-content').innerHTML + '</div>';
  });
 
  // Append the new divs to the parent element
  parentElement.innerHTML = '';
  parentElement.appendChild(typeDiv);
  parentElement.appendChild(contentDiv);
});
</script>